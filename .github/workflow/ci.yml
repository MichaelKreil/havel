name: ci

on:
- pull_request
- push

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        name:
        - Node.js 8.x
        - Node.js 9.x
        - Node.js 10.x
        - Node.js 11.x
        - Node.js 12.x
        - Node.js 13.x
        - Node.js 14.x
        - Node.js 16.x
        - Node.js 17.x

        include:
        - name: Node.js 8.x
          node-version: "8.17"
        - name: Node.js 9.x
          node-version: "9.11"
        - name: Node.js 10.x
          node-version: "10.24"
        - name: Node.js 11.x
          node-version: "11.15"
        - name: Node.js 12.x
          node-version: "12.22"
        - name: Node.js 13.x
          node-version: "13.14"
        - name: Node.js 14.x
          node-version: "14.19"
        - name: Node.js 15.x
          node-version: "15.14"
        - name: Node.js 16.x
          node-version: "16.14"
        - name: Node.js 17.x
          node-version: "17.7"

    steps:
    - uses: actions/checkout@v2

    - name: Install Node.js ${{ matrix.node-version }}
      shell: bash -eo pipefail -l {0}
      run: |
        nvm install --default ${{ matrix.node-version }}
        dirname "$(nvm which ${{ matrix.node-version }})" >> "$GITHUB_PATH"

    - name: Configure npm
      run: |
        npm config set loglevel error
        npm config set shrinkwrap false

    - name: Install npm module(s) ${{ matrix.npm-i }}
      run: npm install --save-dev ${{ matrix.npm-i }}
      if: matrix.npm-i != ''

    - name: Remove non-test dependencies
      run: npm rm --silent --save-dev connect-redis

    - name: Setup Node.js version-specific dependencies
      shell: bash
      run: |
        # eslint for linting
        # - remove on Node.js < 10
        if [[ "$(cut -d. -f1 <<< "${{ matrix.node-version }}")" -lt 10 ]]; then
          node -pe 'Object.keys(require("./package").devDependencies).join("\n")' | \
            grep -E '^eslint(-|$)' | \
            sort -r | \
            xargs -n1 npm rm --silent --save-dev
        fi

    - name: Install Node.js dependencies
      run: npm install

    - name: List environment
      id: list_env
      shell: bash
      run: |
        echo "node@$(node -v)"
        echo "npm@$(npm -v)"
        npm -s ls ||:
        (npm -s ls --depth=0 ||:) | awk -F'[ @]' 'NR>1 && $2 { print "::set-output name=" $2 "::" $3 }'

    - name: Run tests
      shell: bash
      run: npm run test

    - name: Lint code
      if: steps.list_env.outputs.eslint != ''
      run: npm run lint
